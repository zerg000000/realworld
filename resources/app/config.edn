{:duct.profile/base
 {:duct.core/project-ns opinionated
  :duct.core/environment :production
  
  ; web server
  :opinionated.components.web/server
  {:port    3000
   :handler #ig/ref :opinionated.components.web/router
   :logger #ig/ref :duct/logger
   :raw-stream? true
   :executor :none}
  :opinionated.components.web/routes {:db #ig/ref :opinionated.components.db/read
                                      :executor #ig/ref :opinionated.components.executors/execute}
  :opinionated.components.web/router {:routes #ig/ref :opinionated.components.web/routes}
  
  ; worker executor
  :opinionated.components.executors/execute {}
  
  ; read/write separation is pretty common in production environment
  :opinionated.components.db/read {:jdbc-url #duct/env "JDBC_READ_URL"}
  :opinionated.components.db/write {:jdbc-url #duct/env "JDBC_WRITE_URL"}
  
  ; for migrating database schema changes
  :duct.migrator/ragtime
  {:database   #ig/ref :opinionated.components.db/write
   :logger     #ig/ref :duct/logger
   :strategy   :rebase
   :migrations [#ig/ref :opinionated.migration/create-tables]}
  
  [:duct.migrator.ragtime/sql :opinionated.migration/create-tables]
  {:up ["CREATE TABLE user (id INTEGER PRIMARY KEY, user_secret TEXT);"
        "CREATE TABLE user_auth (id INTEGER PRIMARY KEY, user_id INTEGER, method INTEGER, ident TEXT);"]
   :down ["DROP TABLE user_auth"
          "DROP TABLE user;"]}}
 :duct.profile/dev   #duct/include "dev"
 :duct.profile/local #duct/include "local"
 :duct.profile/test  {:opinionated.components.db/read {:jdbc-url "jdbc:sqlite::memory:"}
                      :opinionated.components.db/write {:jdbc-url "jdbc:sqlite::memory:"}}
 :duct.profile/prod  {}
 
 :duct.module/logging {}}