{:duct.profile/base
 {:duct.core/project-ns opinionated
  :duct.core/environment :production
  
  ; web server
  :opinionated.components.web/server
  {:port    3000
   :handler #ig/ref :opinionated.components.web/router
   :logger #ig/ref :duct/logger
   :executor :none}
  :opinionated.components.web/routes {:db #ig/ref :opinionated.components.db/read
                                      :jwt #ig/ref :opinionated.components.auth/backend
                                      :execute-pool #ig/ref :opinionated.components.executors/execute
                                      :wait-pool #ig/ref :opinionated.components.executors/wait}
  :opinionated.components.web/router {:routes #ig/ref :opinionated.components.web/routes
                                      :jwt #ig/ref :opinionated.components.auth/backend}
  
  ; worker executor
  :opinionated.components.executors/execute {:num-threads 4}
  :opinionated.components.executors/wait {}
  
  ; auth
  :opinionated.components.auth/backend {:secret #duct/env "JWT_SECRET"}
  
  ; read/write separation is pretty common in production environment
  :opinionated.components.db/read {:jdbc-url #duct/env "JDBC_READ_URL"}
  :opinionated.components.db/write {:jdbc-url #duct/env "JDBC_WRITE_URL"}
  
  ; for migrating database schema changes
  :duct.migrator/ragtime
  {:database   #ig/ref :opinionated.components.db/write
   :logger     #ig/ref :duct/logger
   :strategy   :rebase
   :migrations [#ig/ref :opinionated.migration/create-tables
                #ig/ref :opinionated.migration/create-article-tables
                #ig/ref :opinionated.migration/create-comment-tables]}
  
  [:duct.migrator.ragtime/sql :opinionated.migration/create-tables]
  {:up ["CREATE TABLE user (id INTEGER PRIMARY KEY, password TEXT NOT NULL, email TEXT NOT NULL, username TEXT NOT NULL, bio TEXT, image TEXT, UNIQUE (email));"
        "CREATE TABLE user_following (id INTEGER PRIMARY KEY, userId INTEGER NOT NULL, followingUserId INTEGER, followedAt TIMESTAMP);"]
   :down ["DROP TABLE user_following;"
          "DROP TABLE user;"]}
  [:duct.migrator.ragtime/sql :opinionated.migration/create-article-tables]
  {:up ["CREATE TABLE article (id INTEGER PRIMARY KEY, slug TEXT NOT NULL, title TEXT NOT NULL, description TEXT, body TEXT, createdAt TIMESTAMP NOT NULL, updatedAt TIMESTAMP NOT NULL, author INTEGER NOT NULL, favoritesCount INTEGER DEFAULT 0, tagList TEXT, UNIQUE(slug));"
        "CREATE TABLE article_tag (id INTEGER PRIMARY KEY, articleId INTEGER, tag TEXT NOT NULL);"
        "CREATE TABLE article_favorite (id INTEGER PRIMARY KEY, articleId INTEGER NOT NULL, userId INTEGER NOT NULL, UNIQUE(articleId, userId));"]
   :down ["DROP TABLE article_favorite;"
          "DROP TABLE article_tag;"
          "DROP TABLE article;"]}
  [:duct.migrator.ragtime/sql :opinionated.migration/create-comment-tables]
  {:up ["CREATE TABLE article_comment (id INTEGER PRIMARY KEY, articleId INTEGER, body TEXT NOT NULL, createdAt TIMESTAMP NOT NULL, updatedAt TIMESTAMP NOT NULL, commenter INTEGER NOT NULL);"]
   :down ["DROP TABLE article_comment;"]}}
 :duct.profile/dev   #duct/include "dev"
 :duct.profile/local #duct/include "local"
 :duct.profile/test  {:opinionated.components.db/read {:jdbc-url "jdbc:sqlite::memory:"}
                      :opinionated.components.db/write {:jdbc-url "jdbc:sqlite::memory:"}}
 :duct.profile/prod  {}
 
 :duct.module/logging {}}